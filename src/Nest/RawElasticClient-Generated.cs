using System.Collections.Specialized;
using System.Threading.Tasks;

///Generated using generate-raw-client.sh in NEST's root
namespace Nest
{
	///<summary>
	///Raw operations with elasticsearch
	///<pre>
	///This file is automatically generated from the elasticsearch repository itself
	///</pre>
	///<pre>
	///Generated of commit d5d85e0e2b5885ed0b8178fae7cf3b32a9371ab0
	///</pre>
	///</summary>
	public partial class RawElasticClient : IRawElasticClient
	{

	///<summary>HEAD /_alias/{name}</summary>
	public ConnectionStatus AliasesExistHead(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /_alias/{name}</summary>
	public Task<ConnectionStatus> AliasesExistHeadAsync(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/_alias/{name}</summary>
	public ConnectionStatus AliasesExistHead(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/_alias/{name}</summary>
	public Task<ConnectionStatus> AliasesExistHeadAsync(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>GET /_analyze</summary>
	public ConnectionStatus AnalyzeGet(NameValueCollection queryString = null)
	{
		var path = "/_analyze";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_analyze</summary>
	public Task<ConnectionStatus> AnalyzeGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_analyze";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_analyze</summary>
	public ConnectionStatus AnalyzeGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_analyze".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_analyze</summary>
	public Task<ConnectionStatus> AnalyzeGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_analyze".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_analyze</summary>
	public ConnectionStatus AnalyzePost(object body, NameValueCollection queryString = null)
	{
		var path = "/_analyze";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_analyze</summary>
	public Task<ConnectionStatus> AnalyzePostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_analyze";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_analyze</summary>
	public ConnectionStatus AnalyzePost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_analyze".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_analyze</summary>
	public Task<ConnectionStatus> AnalyzePostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_analyze".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_bulk</summary>
	public ConnectionStatus BulkPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_bulk";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_bulk</summary>
	public Task<ConnectionStatus> BulkPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_bulk";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_bulk</summary>
	public ConnectionStatus BulkPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_bulk".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_bulk</summary>
	public Task<ConnectionStatus> BulkPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_bulk".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_bulk</summary>
	public ConnectionStatus BulkPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_bulk".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_bulk</summary>
	public Task<ConnectionStatus> BulkPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_bulk".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_bulk</summary>
	public ConnectionStatus BulkPut(object body, NameValueCollection queryString = null)
	{
		var path = "/_bulk";
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_bulk</summary>
	public Task<ConnectionStatus> BulkPutAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_bulk";
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_bulk</summary>
	public ConnectionStatus BulkPut(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_bulk".Inject(new { index = index });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_bulk</summary>
	public Task<ConnectionStatus> BulkPutAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_bulk".Inject(new { index = index });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_bulk</summary>
	public ConnectionStatus BulkPut(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_bulk".Inject(new { index = index, type = type });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_bulk</summary>
	public Task<ConnectionStatus> BulkPutAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_bulk".Inject(new { index = index, type = type });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cache/clear</summary>
	public ConnectionStatus ClearIndicesCacheGet(NameValueCollection queryString = null)
	{
		var path = "/_cache/clear";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cache/clear</summary>
	public Task<ConnectionStatus> ClearIndicesCacheGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cache/clear";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_cache/clear</summary>
	public ConnectionStatus ClearIndicesCacheGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_cache/clear".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_cache/clear</summary>
	public Task<ConnectionStatus> ClearIndicesCacheGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_cache/clear".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_cache/clear</summary>
	public ConnectionStatus ClearIndicesCachePost(object body, NameValueCollection queryString = null)
	{
		var path = "/_cache/clear";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cache/clear</summary>
	public Task<ConnectionStatus> ClearIndicesCachePostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_cache/clear";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_cache/clear</summary>
	public ConnectionStatus ClearIndicesCachePost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_cache/clear".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_cache/clear</summary>
	public Task<ConnectionStatus> ClearIndicesCachePostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_cache/clear".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_search/scroll</summary>
	public ConnectionStatus ClearScrollDelete(object body, NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_search/scroll</summary>
	public Task<ConnectionStatus> ClearScrollDeleteAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_search/scroll/{scroll_id}</summary>
	public ConnectionStatus ClearScrollDelete(string scroll_id, object body, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_search/scroll/{scroll_id}</summary>
	public Task<ConnectionStatus> ClearScrollDeleteAsync(string scroll_id, object body, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>POST /_close</summary>
	public ConnectionStatus CloseIndexPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_close";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_close</summary>
	public Task<ConnectionStatus> CloseIndexPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_close";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_close</summary>
	public ConnectionStatus CloseIndexPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_close".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_close</summary>
	public Task<ConnectionStatus> CloseIndexPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_close".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cluster/settings</summary>
	public ConnectionStatus ClusterGetSettings(NameValueCollection queryString = null)
	{
		var path = "/_cluster/settings";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/settings</summary>
	public Task<ConnectionStatus> ClusterGetSettingsAsync(NameValueCollection queryString = null)
	{
		var path = "/_cluster/settings";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/health</summary>
	public ConnectionStatus ClusterHealthGet(NameValueCollection queryString = null)
	{
		var path = "/_cluster/health";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/health</summary>
	public Task<ConnectionStatus> ClusterHealthGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cluster/health";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/health/{index}</summary>
	public ConnectionStatus ClusterHealthGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/_cluster/health/{index}".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/health/{index}</summary>
	public Task<ConnectionStatus> ClusterHealthGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/_cluster/health/{index}".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_cluster/reroute</summary>
	public ConnectionStatus ClusterReroutePost(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/reroute";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/reroute</summary>
	public Task<ConnectionStatus> ClusterReroutePostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/reroute";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsGet(NameValueCollection queryString = null)
	{
		var path = "/_search_shards";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_search_shards";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search_shards".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search_shards".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search_shards".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search_shards".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_search_shards";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_search_shards";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search_shards".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search_shards".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_search_shards</summary>
	public ConnectionStatus ClusterSearchShardsPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search_shards".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_search_shards</summary>
	public Task<ConnectionStatus> ClusterSearchShardsPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search_shards".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cluster/state</summary>
	public ConnectionStatus ClusterStateGet(NameValueCollection queryString = null)
	{
		var path = "/_cluster/state";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/state</summary>
	public Task<ConnectionStatus> ClusterStateGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cluster/state";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>PUT /_cluster/settings</summary>
	public ConnectionStatus ClusterUpdateSettingsPut(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/settings";
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_cluster/settings</summary>
	public Task<ConnectionStatus> ClusterUpdateSettingsPutAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/settings";
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>GET /_count</summary>
	public ConnectionStatus CountGet(NameValueCollection queryString = null)
	{
		var path = "/_count";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_count</summary>
	public Task<ConnectionStatus> CountGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_count";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_count</summary>
	public ConnectionStatus CountGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_count".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_count</summary>
	public Task<ConnectionStatus> CountGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_count".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_count</summary>
	public ConnectionStatus CountGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_count".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_count</summary>
	public Task<ConnectionStatus> CountGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_count".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_count</summary>
	public ConnectionStatus CountPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_count";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_count</summary>
	public Task<ConnectionStatus> CountPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_count";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_count</summary>
	public ConnectionStatus CountPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_count".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_count</summary>
	public Task<ConnectionStatus> CountPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_count".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_count</summary>
	public ConnectionStatus CountPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_count".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_count</summary>
	public Task<ConnectionStatus> CountPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_count".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_create</summary>
	public ConnectionStatus CreatePost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_create".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_create</summary>
	public Task<ConnectionStatus> CreatePostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_create".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/{id}/_create</summary>
	public ConnectionStatus CreatePut(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_create".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/{id}/_create</summary>
	public Task<ConnectionStatus> CreatePutAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_create".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}</summary>
	public ConnectionStatus CreateIndexPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}</summary>
	public Task<ConnectionStatus> CreateIndexPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}</summary>
	public ConnectionStatus CreateIndexPut(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}</summary>
	public Task<ConnectionStatus> CreateIndexPutAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/{id}</summary>
	public ConnectionStatus Delete(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/{id}</summary>
	public Task<ConnectionStatus> DeleteAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_query</summary>
	public ConnectionStatus DeleteByQuery(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_query".Inject(new { index = index });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_query</summary>
	public Task<ConnectionStatus> DeleteByQueryAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_query".Inject(new { index = index });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_query</summary>
	public ConnectionStatus DeleteByQuery(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_query".Inject(new { index = index, type = type });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_query</summary>
	public Task<ConnectionStatus> DeleteByQueryAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_query".Inject(new { index = index, type = type });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /</summary>
	public ConnectionStatus DeleteIndex(object body, NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /</summary>
	public Task<ConnectionStatus> DeleteIndexAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}</summary>
	public ConnectionStatus DeleteIndex(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}</summary>
	public Task<ConnectionStatus> DeleteIndexAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_template/{name}</summary>
	public ConnectionStatus DeleteIndexTemplate(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /_template/{name}</summary>
	public Task<ConnectionStatus> DeleteIndexTemplateAsync(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_mapping</summary>
	public ConnectionStatus DeleteMapping(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_mapping</summary>
	public Task<ConnectionStatus> DeleteMappingAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_warmer</summary>
	public ConnectionStatus DeleteWarmer(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_warmer".Inject(new { index = index });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_warmer</summary>
	public Task<ConnectionStatus> DeleteWarmerAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_warmer".Inject(new { index = index });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_warmer/{name}</summary>
	public ConnectionStatus DeleteWarmer(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_warmer/{name}</summary>
	public Task<ConnectionStatus> DeleteWarmerAsync(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_warmer/{name}</summary>
	public ConnectionStatus DeleteWarmer(string index, string type, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/{type}/_warmer/{name}</summary>
	public Task<ConnectionStatus> DeleteWarmerAsync(string index, string type, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_explain</summary>
	public ConnectionStatus ExplainGet(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_explain".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_explain</summary>
	public Task<ConnectionStatus> ExplainGetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_explain".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_explain</summary>
	public ConnectionStatus ExplainPost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_explain".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_explain</summary>
	public Task<ConnectionStatus> ExplainPostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_explain".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_flush</summary>
	public ConnectionStatus FlushGet(NameValueCollection queryString = null)
	{
		var path = "/_flush";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_flush</summary>
	public Task<ConnectionStatus> FlushGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_flush";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_flush</summary>
	public ConnectionStatus FlushGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_flush".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_flush</summary>
	public Task<ConnectionStatus> FlushGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_flush".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_flush</summary>
	public ConnectionStatus FlushPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_flush";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_flush</summary>
	public Task<ConnectionStatus> FlushPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_flush";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_flush</summary>
	public ConnectionStatus FlushPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_flush".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_flush</summary>
	public Task<ConnectionStatus> FlushPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_flush".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_gateway/snapshot</summary>
	public ConnectionStatus GatewaySnapshotPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_gateway/snapshot";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_gateway/snapshot</summary>
	public Task<ConnectionStatus> GatewaySnapshotPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_gateway/snapshot";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_gateway/snapshot</summary>
	public ConnectionStatus GatewaySnapshotPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_gateway/snapshot".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_gateway/snapshot</summary>
	public Task<ConnectionStatus> GatewaySnapshotPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_gateway/snapshot".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}</summary>
	public ConnectionStatus Get(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}</summary>
	public Task<ConnectionStatus> GetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_alias/{name}</summary>
	public ConnectionStatus GetAliases(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_alias/{name}</summary>
	public Task<ConnectionStatus> GetAliasesAsync(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_alias/{name}</summary>
	public ConnectionStatus GetAliases(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_alias/{name}</summary>
	public Task<ConnectionStatus> GetAliasesAsync(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_template</summary>
	public ConnectionStatus GetIndexTemplate(NameValueCollection queryString = null)
	{
		var path = "/_template";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_template</summary>
	public Task<ConnectionStatus> GetIndexTemplateAsync(NameValueCollection queryString = null)
	{
		var path = "/_template";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_template/{name}</summary>
	public ConnectionStatus GetIndexTemplate(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_template/{name}</summary>
	public Task<ConnectionStatus> GetIndexTemplateAsync(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_aliases</summary>
	public ConnectionStatus GetIndicesAliases(NameValueCollection queryString = null)
	{
		var path = "/_aliases";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_aliases</summary>
	public Task<ConnectionStatus> GetIndicesAliasesAsync(NameValueCollection queryString = null)
	{
		var path = "/_aliases";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_aliases</summary>
	public ConnectionStatus GetIndicesAliases(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_aliases".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_aliases</summary>
	public Task<ConnectionStatus> GetIndicesAliasesAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_aliases".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_mapping</summary>
	public ConnectionStatus GetMapping(NameValueCollection queryString = null)
	{
		var path = "/_mapping";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_mapping</summary>
	public Task<ConnectionStatus> GetMappingAsync(NameValueCollection queryString = null)
	{
		var path = "/_mapping";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mapping</summary>
	public ConnectionStatus GetMapping(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mapping</summary>
	public Task<ConnectionStatus> GetMappingAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mapping</summary>
	public ConnectionStatus GetMapping(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mapping</summary>
	public Task<ConnectionStatus> GetMappingAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_settings</summary>
	public ConnectionStatus GetSettings(NameValueCollection queryString = null)
	{
		var path = "/_settings";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_settings</summary>
	public Task<ConnectionStatus> GetSettingsAsync(NameValueCollection queryString = null)
	{
		var path = "/_settings";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_settings</summary>
	public ConnectionStatus GetSettings(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_settings".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_settings</summary>
	public Task<ConnectionStatus> GetSettingsAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_settings".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_source</summary>
	public ConnectionStatus GetSource(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_source".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_source</summary>
	public Task<ConnectionStatus> GetSourceAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_source".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_warmer</summary>
	public ConnectionStatus GetWarmer(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_warmer".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_warmer</summary>
	public Task<ConnectionStatus> GetWarmerAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_warmer".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_warmer/{name}</summary>
	public ConnectionStatus GetWarmer(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_warmer/{name}</summary>
	public Task<ConnectionStatus> GetWarmerAsync(string index, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_warmer/{name}</summary>
	public ConnectionStatus GetWarmer(string index, string type, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_warmer/{name}</summary>
	public Task<ConnectionStatus> GetWarmerAsync(string index, string type, string name, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}/{id}</summary>
	public ConnectionStatus Head(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}/{id}</summary>
	public Task<ConnectionStatus> HeadAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /_template/{name}</summary>
	public ConnectionStatus HeadIndexTemplate(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /_template/{name}</summary>
	public Task<ConnectionStatus> HeadIndexTemplateAsync(string name, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}/{id}/_source</summary>
	public ConnectionStatus HeadSource(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_source".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}/{id}/_source</summary>
	public Task<ConnectionStatus> HeadSourceAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_source".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}</summary>
	public ConnectionStatus IndexPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}</summary>
	public Task<ConnectionStatus> IndexPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}</summary>
	public ConnectionStatus IndexPost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}</summary>
	public Task<ConnectionStatus> IndexPostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/{id}</summary>
	public ConnectionStatus IndexPut(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/{id}</summary>
	public Task<ConnectionStatus> IndexPutAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_alias/{name}</summary>
	public ConnectionStatus IndexDeleteAliases(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>DELETE /{index}/_alias/{name}</summary>
	public Task<ConnectionStatus> IndexDeleteAliasesAsync(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("DELETE", path, data: body, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/completion</summary>
	public ConnectionStatus IndexFilteredStatsCompletionGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/completion".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/completion</summary>
	public Task<ConnectionStatus> IndexFilteredStatsCompletionGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/completion".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/completion/{fields}</summary>
	public ConnectionStatus IndexFilteredStatsCompletionGet(string index, string fields, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/{index}/_stats/completion/{fields}".Inject(new { index = index, fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/completion/{fields}</summary>
	public Task<ConnectionStatus> IndexFilteredStatsCompletionGetAsync(string index, string fields, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/{index}/_stats/completion/{fields}".Inject(new { index = index, fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/docs</summary>
	public ConnectionStatus IndexFilteredStatsDocsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/docs".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/docs</summary>
	public Task<ConnectionStatus> IndexFilteredStatsDocsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/docs".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/fielddata</summary>
	public ConnectionStatus IndexFilteredStatsFielddataGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/fielddata".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/fielddata</summary>
	public Task<ConnectionStatus> IndexFilteredStatsFielddataGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/fielddata".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/fielddata/{fields}</summary>
	public ConnectionStatus IndexFilteredStatsFielddataGet(string index, string fields, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/{index}/_stats/fielddata/{fields}".Inject(new { index = index, fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/fielddata/{fields}</summary>
	public Task<ConnectionStatus> IndexFilteredStatsFielddataGetAsync(string index, string fields, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/{index}/_stats/fielddata/{fields}".Inject(new { index = index, fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/filter_cache</summary>
	public ConnectionStatus IndexFilteredStatsFilter_cacheGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/filter_cache".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/filter_cache</summary>
	public Task<ConnectionStatus> IndexFilteredStatsFilter_cacheGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/filter_cache".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/flush</summary>
	public ConnectionStatus IndexFilteredStatsFlushGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/flush".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/flush</summary>
	public Task<ConnectionStatus> IndexFilteredStatsFlushGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/flush".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/get</summary>
	public ConnectionStatus IndexFilteredStatsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/get".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/get</summary>
	public Task<ConnectionStatus> IndexFilteredStatsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/get".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/id_cache</summary>
	public ConnectionStatus IndexFilteredStatsId_cacheGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/id_cache".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/id_cache</summary>
	public Task<ConnectionStatus> IndexFilteredStatsId_cacheGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/id_cache".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/indexing</summary>
	public ConnectionStatus IndexFilteredStatsIndexingGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/indexing".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/indexing</summary>
	public Task<ConnectionStatus> IndexFilteredStatsIndexingGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/indexing".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/indexing/{indexingTypes2}</summary>
	public ConnectionStatus IndexFilteredStatsIndexingGet(string index, string indexingTypes2, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		indexingTypes2.ThrowIfNullOrEmpty("indexingTypes2");
		var path = "/{index}/_stats/indexing/{indexingTypes2}".Inject(new { index = index, indexingTypes2 = indexingTypes2 });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/indexing/{indexingTypes2}</summary>
	public Task<ConnectionStatus> IndexFilteredStatsIndexingGetAsync(string index, string indexingTypes2, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		indexingTypes2.ThrowIfNullOrEmpty("indexingTypes2");
		var path = "/{index}/_stats/indexing/{indexingTypes2}".Inject(new { index = index, indexingTypes2 = indexingTypes2 });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/merge</summary>
	public ConnectionStatus IndexFilteredStatsMergeGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/merge".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/merge</summary>
	public Task<ConnectionStatus> IndexFilteredStatsMergeGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/merge".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/percolate</summary>
	public ConnectionStatus IndexFilteredStatsPercolateGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/percolate".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/percolate</summary>
	public Task<ConnectionStatus> IndexFilteredStatsPercolateGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/percolate".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/refresh</summary>
	public ConnectionStatus IndexFilteredStatsRefreshGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/refresh".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/refresh</summary>
	public Task<ConnectionStatus> IndexFilteredStatsRefreshGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/refresh".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/search</summary>
	public ConnectionStatus IndexFilteredStatsSearchGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/search".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/search</summary>
	public Task<ConnectionStatus> IndexFilteredStatsSearchGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/search".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/search/{searchGroupsStats2}</summary>
	public ConnectionStatus IndexFilteredStatsSearchGet(string index, string searchGroupsStats2, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		searchGroupsStats2.ThrowIfNullOrEmpty("searchGroupsStats2");
		var path = "/{index}/_stats/search/{searchGroupsStats2}".Inject(new { index = index, searchGroupsStats2 = searchGroupsStats2 });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/search/{searchGroupsStats2}</summary>
	public Task<ConnectionStatus> IndexFilteredStatsSearchGetAsync(string index, string searchGroupsStats2, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		searchGroupsStats2.ThrowIfNullOrEmpty("searchGroupsStats2");
		var path = "/{index}/_stats/search/{searchGroupsStats2}".Inject(new { index = index, searchGroupsStats2 = searchGroupsStats2 });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/store</summary>
	public ConnectionStatus IndexFilteredStatsStoreGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/store".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/store</summary>
	public Task<ConnectionStatus> IndexFilteredStatsStoreGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/store".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/warmer</summary>
	public ConnectionStatus IndexFilteredStatsWarmerGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/warmer".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats/warmer</summary>
	public Task<ConnectionStatus> IndexFilteredStatsWarmerGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats/warmer".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>PUT /_alias</summary>
	public ConnectionStatus IndexPutAlias(object body, NameValueCollection queryString = null)
	{
		var path = "/_alias";
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_alias</summary>
	public Task<ConnectionStatus> IndexPutAliasAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_alias";
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_alias</summary>
	public ConnectionStatus IndexPutAlias(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_alias".Inject(new { index = index });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_alias</summary>
	public Task<ConnectionStatus> IndexPutAliasAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_alias".Inject(new { index = index });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_alias/{name}</summary>
	public ConnectionStatus IndexPutAlias(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_alias/{name}</summary>
	public Task<ConnectionStatus> IndexPutAliasAsync(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_alias/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_alias/{name}</summary>
	public ConnectionStatus IndexPutAliasByName(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_alias/{name}</summary>
	public Task<ConnectionStatus> IndexPutAliasByNameAsync(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_alias/{name}".Inject(new { name = name });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cat/indices</summary>
	public ConnectionStatus IndicesGet(NameValueCollection queryString = null)
	{
		var path = "/_cat/indices";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/indices</summary>
	public Task<ConnectionStatus> IndicesGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cat/indices";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/indices/{index}</summary>
	public ConnectionStatus IndicesGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/_cat/indices/{index}".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/indices/{index}</summary>
	public Task<ConnectionStatus> IndicesGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/_cat/indices/{index}".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_aliases</summary>
	public ConnectionStatus IndicesAliasesPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_aliases";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_aliases</summary>
	public Task<ConnectionStatus> IndicesAliasesPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_aliases";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>HEAD /{index}</summary>
	public ConnectionStatus IndicesExistsHead(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}</summary>
	public Task<ConnectionStatus> IndicesExistsHeadAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}".Inject(new { index = index });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>GET /_segments</summary>
	public ConnectionStatus IndicesSegmentsGet(NameValueCollection queryString = null)
	{
		var path = "/_segments";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_segments</summary>
	public Task<ConnectionStatus> IndicesSegmentsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_segments";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_segments</summary>
	public ConnectionStatus IndicesSegmentsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_segments".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_segments</summary>
	public Task<ConnectionStatus> IndicesSegmentsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_segments".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/completion</summary>
	public ConnectionStatus IndicesStatCompletionGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/completion";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/completion</summary>
	public Task<ConnectionStatus> IndicesStatCompletionGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/completion";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/completion/{fields}</summary>
	public ConnectionStatus IndicesStatCompletionGet(string fields, NameValueCollection queryString = null)
	{
		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_stats/completion/{fields}".Inject(new { fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/completion/{fields}</summary>
	public Task<ConnectionStatus> IndicesStatCompletionGetAsync(string fields, NameValueCollection queryString = null)
	{
		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_stats/completion/{fields}".Inject(new { fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/docs</summary>
	public ConnectionStatus IndicesStatDocsGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/docs";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/docs</summary>
	public Task<ConnectionStatus> IndicesStatDocsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/docs";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/fielddata</summary>
	public ConnectionStatus IndicesStatFielddataGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/fielddata";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/fielddata</summary>
	public Task<ConnectionStatus> IndicesStatFielddataGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/fielddata";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/fielddata/{fields}</summary>
	public ConnectionStatus IndicesStatFielddataGet(string fields, NameValueCollection queryString = null)
	{
		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_stats/fielddata/{fields}".Inject(new { fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/fielddata/{fields}</summary>
	public Task<ConnectionStatus> IndicesStatFielddataGetAsync(string fields, NameValueCollection queryString = null)
	{
		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_stats/fielddata/{fields}".Inject(new { fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/filter_cache</summary>
	public ConnectionStatus IndicesStatFilter_cacheGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/filter_cache";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/filter_cache</summary>
	public Task<ConnectionStatus> IndicesStatFilter_cacheGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/filter_cache";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/flush</summary>
	public ConnectionStatus IndicesStatFlushGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/flush";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/flush</summary>
	public Task<ConnectionStatus> IndicesStatFlushGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/flush";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/get</summary>
	public ConnectionStatus IndicesStatGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/get";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/get</summary>
	public Task<ConnectionStatus> IndicesStatGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/get";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/id_cache</summary>
	public ConnectionStatus IndicesStatId_cacheGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/id_cache";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/id_cache</summary>
	public Task<ConnectionStatus> IndicesStatId_cacheGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/id_cache";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/indexing</summary>
	public ConnectionStatus IndicesStatIndexingGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/indexing";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/indexing</summary>
	public Task<ConnectionStatus> IndicesStatIndexingGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/indexing";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/indexing/{indexingTypes1}</summary>
	public ConnectionStatus IndicesStatIndexingGet(string indexingTypes1, NameValueCollection queryString = null)
	{
		indexingTypes1.ThrowIfNullOrEmpty("indexingTypes1");
		var path = "/_stats/indexing/{indexingTypes1}".Inject(new { indexingTypes1 = indexingTypes1 });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/indexing/{indexingTypes1}</summary>
	public Task<ConnectionStatus> IndicesStatIndexingGetAsync(string indexingTypes1, NameValueCollection queryString = null)
	{
		indexingTypes1.ThrowIfNullOrEmpty("indexingTypes1");
		var path = "/_stats/indexing/{indexingTypes1}".Inject(new { indexingTypes1 = indexingTypes1 });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/merge</summary>
	public ConnectionStatus IndicesStatMergeGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/merge";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/merge</summary>
	public Task<ConnectionStatus> IndicesStatMergeGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/merge";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/percolate</summary>
	public ConnectionStatus IndicesStatPercolateGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/percolate";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/percolate</summary>
	public Task<ConnectionStatus> IndicesStatPercolateGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/percolate";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/refresh</summary>
	public ConnectionStatus IndicesStatRefreshGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/refresh";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/refresh</summary>
	public Task<ConnectionStatus> IndicesStatRefreshGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/refresh";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/search</summary>
	public ConnectionStatus IndicesStatSearchGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/search";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/search</summary>
	public Task<ConnectionStatus> IndicesStatSearchGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/search";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/search/{searchGroupsStats1}</summary>
	public ConnectionStatus IndicesStatSearchGet(string searchGroupsStats1, NameValueCollection queryString = null)
	{
		searchGroupsStats1.ThrowIfNullOrEmpty("searchGroupsStats1");
		var path = "/_stats/search/{searchGroupsStats1}".Inject(new { searchGroupsStats1 = searchGroupsStats1 });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/search/{searchGroupsStats1}</summary>
	public Task<ConnectionStatus> IndicesStatSearchGetAsync(string searchGroupsStats1, NameValueCollection queryString = null)
	{
		searchGroupsStats1.ThrowIfNullOrEmpty("searchGroupsStats1");
		var path = "/_stats/search/{searchGroupsStats1}".Inject(new { searchGroupsStats1 = searchGroupsStats1 });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/store</summary>
	public ConnectionStatus IndicesStatStoreGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/store";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/store</summary>
	public Task<ConnectionStatus> IndicesStatStoreGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/store";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/warmer</summary>
	public ConnectionStatus IndicesStatWarmerGet(NameValueCollection queryString = null)
	{
		var path = "/_stats/warmer";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats/warmer</summary>
	public Task<ConnectionStatus> IndicesStatWarmerGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats/warmer";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats</summary>
	public ConnectionStatus IndicesStatsGet(NameValueCollection queryString = null)
	{
		var path = "/_stats";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_stats</summary>
	public Task<ConnectionStatus> IndicesStatsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_stats";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats</summary>
	public ConnectionStatus IndicesStatsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_stats</summary>
	public Task<ConnectionStatus> IndicesStatsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_stats".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_status</summary>
	public ConnectionStatus IndicesStatusGet(NameValueCollection queryString = null)
	{
		var path = "/_status";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_status</summary>
	public Task<ConnectionStatus> IndicesStatusGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_status";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_status</summary>
	public ConnectionStatus IndicesStatusGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_status".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_status</summary>
	public Task<ConnectionStatus> IndicesStatusGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_status".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /</summary>
	public ConnectionStatus MainGet(NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /</summary>
	public Task<ConnectionStatus> MainGetAsync(NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>HEAD /</summary>
	public ConnectionStatus MainHead(NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /</summary>
	public Task<ConnectionStatus> MainHeadAsync(NameValueCollection queryString = null)
	{
		var path = "/";
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>GET /_cat/master</summary>
	public ConnectionStatus MasterGet(NameValueCollection queryString = null)
	{
		var path = "/_cat/master";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/master</summary>
	public Task<ConnectionStatus> MasterGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cat/master";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_mlt</summary>
	public ConnectionStatus MoreLikeThisGet(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_mlt".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_mlt</summary>
	public Task<ConnectionStatus> MoreLikeThisGetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_mlt".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_mlt</summary>
	public ConnectionStatus MoreLikeThisPost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_mlt".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_mlt</summary>
	public Task<ConnectionStatus> MoreLikeThisPostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_mlt".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_mget</summary>
	public ConnectionStatus MultiGet(NameValueCollection queryString = null)
	{
		var path = "/_mget";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_mget</summary>
	public Task<ConnectionStatus> MultiGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_mget";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mget</summary>
	public ConnectionStatus MultiGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mget".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mget</summary>
	public Task<ConnectionStatus> MultiGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mget".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mget</summary>
	public ConnectionStatus MultiGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mget".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mget</summary>
	public Task<ConnectionStatus> MultiGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mget".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_mget</summary>
	public ConnectionStatus MultiGetPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_mget";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_mget</summary>
	public Task<ConnectionStatus> MultiGetPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_mget";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mget</summary>
	public ConnectionStatus MultiGetPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mget".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mget</summary>
	public Task<ConnectionStatus> MultiGetPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mget".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mget</summary>
	public ConnectionStatus MultiGetPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mget".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mget</summary>
	public Task<ConnectionStatus> MultiGetPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mget".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_mpercolate</summary>
	public ConnectionStatus MultiPercolatePost(object body, NameValueCollection queryString = null)
	{
		var path = "/_mpercolate";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_mpercolate</summary>
	public Task<ConnectionStatus> MultiPercolatePostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_mpercolate";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mpercolate</summary>
	public ConnectionStatus MultiPercolatePost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mpercolate".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mpercolate</summary>
	public Task<ConnectionStatus> MultiPercolatePostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mpercolate".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mpercolate</summary>
	public ConnectionStatus MultiPercolatePost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mpercolate".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mpercolate</summary>
	public Task<ConnectionStatus> MultiPercolatePostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mpercolate".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_msearch</summary>
	public ConnectionStatus MultiSearchGet(NameValueCollection queryString = null)
	{
		var path = "/_msearch";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_msearch</summary>
	public Task<ConnectionStatus> MultiSearchGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_msearch";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_msearch</summary>
	public ConnectionStatus MultiSearchGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_msearch".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_msearch</summary>
	public Task<ConnectionStatus> MultiSearchGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_msearch".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_msearch</summary>
	public ConnectionStatus MultiSearchGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_msearch".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_msearch</summary>
	public Task<ConnectionStatus> MultiSearchGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_msearch".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_msearch</summary>
	public ConnectionStatus MultiSearchPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_msearch";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_msearch</summary>
	public Task<ConnectionStatus> MultiSearchPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_msearch";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_msearch</summary>
	public ConnectionStatus MultiSearchPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_msearch".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_msearch</summary>
	public Task<ConnectionStatus> MultiSearchPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_msearch".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_msearch</summary>
	public ConnectionStatus MultiSearchPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_msearch".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_msearch</summary>
	public Task<ConnectionStatus> MultiSearchPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_msearch".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsGet(NameValueCollection queryString = null)
	{
		var path = "/_mtermvectors";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_mtermvectors";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mtermvectors".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mtermvectors".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mtermvectors".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mtermvectors".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_mtermvectors";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_mtermvectors";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mtermvectors".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mtermvectors".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mtermvectors</summary>
	public ConnectionStatus MultiTermVectorsPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mtermvectors".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mtermvectors</summary>
	public Task<ConnectionStatus> MultiTermVectorsPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mtermvectors".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/http</summary>
	public ConnectionStatus NodeInfoHttpGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/http".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/http</summary>
	public Task<ConnectionStatus> NodeInfoHttpGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/http".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/jvm</summary>
	public ConnectionStatus NodeInfoJvmGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/jvm".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/jvm</summary>
	public Task<ConnectionStatus> NodeInfoJvmGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/jvm".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/network</summary>
	public ConnectionStatus NodeInfoNetworkGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/network".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/network</summary>
	public Task<ConnectionStatus> NodeInfoNetworkGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/network".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/os</summary>
	public ConnectionStatus NodeInfoOsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/os".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/os</summary>
	public Task<ConnectionStatus> NodeInfoOsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/os".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/plugin</summary>
	public ConnectionStatus NodeInfoPluginGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/plugin".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/plugin</summary>
	public Task<ConnectionStatus> NodeInfoPluginGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/plugin".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/process</summary>
	public ConnectionStatus NodeInfoProcessGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/process".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/process</summary>
	public Task<ConnectionStatus> NodeInfoProcessGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/process".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/settings</summary>
	public ConnectionStatus NodeInfoSettingsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/settings".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/settings</summary>
	public Task<ConnectionStatus> NodeInfoSettingsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/settings".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/thread_pool</summary>
	public ConnectionStatus NodeInfoThread_poolGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/thread_pool".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/thread_pool</summary>
	public Task<ConnectionStatus> NodeInfoThread_poolGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/thread_pool".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/transport</summary>
	public ConnectionStatus NodeInfoTransportGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/transport".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/transport</summary>
	public Task<ConnectionStatus> NodeInfoTransportGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/transport".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/fs</summary>
	public ConnectionStatus NodeStatsFsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/fs".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/fs</summary>
	public Task<ConnectionStatus> NodeStatsFsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/fs".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/http</summary>
	public ConnectionStatus NodeStatsHttpGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/http".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/http</summary>
	public Task<ConnectionStatus> NodeStatsHttpGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/http".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices</summary>
	public ConnectionStatus NodeStatsIndicesGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/indices".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices</summary>
	public Task<ConnectionStatus> NodeStatsIndicesGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/indices".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices/{flags}</summary>
	public ConnectionStatus NodeStatsIndicesGet(string nodeId, string flags, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
 		flags.ThrowIfNullOrEmpty("flags");
		var path = "/_nodes/{nodeId}/stats/indices/{flags}".Inject(new { nodeId = nodeId, flags = flags });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices/{flags}</summary>
	public Task<ConnectionStatus> NodeStatsIndicesGetAsync(string nodeId, string flags, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
 		flags.ThrowIfNullOrEmpty("flags");
		var path = "/_nodes/{nodeId}/stats/indices/{flags}".Inject(new { nodeId = nodeId, flags = flags });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices/{flags}/{fields}</summary>
	public ConnectionStatus NodeStatsIndicesGet(string nodeId, string flags, string fields, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
 		flags.ThrowIfNullOrEmpty("flags");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_nodes/{nodeId}/stats/indices/{flags}/{fields}".Inject(new { nodeId = nodeId, flags = flags, fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/indices/{flags}/{fields}</summary>
	public Task<ConnectionStatus> NodeStatsIndicesGetAsync(string nodeId, string flags, string fields, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
 		flags.ThrowIfNullOrEmpty("flags");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_nodes/{nodeId}/stats/indices/{flags}/{fields}".Inject(new { nodeId = nodeId, flags = flags, fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/jvm</summary>
	public ConnectionStatus NodeStatsJvmGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/jvm".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/jvm</summary>
	public Task<ConnectionStatus> NodeStatsJvmGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/jvm".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/network</summary>
	public ConnectionStatus NodeStatsNetworkGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/network".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/network</summary>
	public Task<ConnectionStatus> NodeStatsNetworkGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/network".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/os</summary>
	public ConnectionStatus NodeStatsOsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/os".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/os</summary>
	public Task<ConnectionStatus> NodeStatsOsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/os".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/process</summary>
	public ConnectionStatus NodeStatsProcessGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/process".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/process</summary>
	public Task<ConnectionStatus> NodeStatsProcessGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/process".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/thread_pool</summary>
	public ConnectionStatus NodeStatsThread_poolGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/thread_pool".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/thread_pool</summary>
	public Task<ConnectionStatus> NodeStatsThread_poolGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/thread_pool".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/transport</summary>
	public ConnectionStatus NodeStatsTransportGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/transport".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats/transport</summary>
	public Task<ConnectionStatus> NodeStatsTransportGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats/transport".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/nodes</summary>
	public ConnectionStatus NodesGet(NameValueCollection queryString = null)
	{
		var path = "/_cat/nodes";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/nodes</summary>
	public Task<ConnectionStatus> NodesGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cat/nodes";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/hot_threads</summary>
	public ConnectionStatus NodesHotThreadsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/hot_threads";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/hot_threads</summary>
	public Task<ConnectionStatus> NodesHotThreadsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/hot_threads";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/hot_threads</summary>
	public ConnectionStatus NodesHotThreadsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/hot_threads".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/hot_threads</summary>
	public Task<ConnectionStatus> NodesHotThreadsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/hot_threads".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes</summary>
	public ConnectionStatus NodesInfoGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes</summary>
	public Task<ConnectionStatus> NodesInfoGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}</summary>
	public ConnectionStatus NodesInfoGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}</summary>
	public Task<ConnectionStatus> NodesInfoGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/http</summary>
	public ConnectionStatus NodesInfoHttpGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/http";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/http</summary>
	public Task<ConnectionStatus> NodesInfoHttpGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/http";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/jvm</summary>
	public ConnectionStatus NodesInfoJvmGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/jvm";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/jvm</summary>
	public Task<ConnectionStatus> NodesInfoJvmGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/jvm";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/network</summary>
	public ConnectionStatus NodesInfoNetworkGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/network";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/network</summary>
	public Task<ConnectionStatus> NodesInfoNetworkGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/network";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/os</summary>
	public ConnectionStatus NodesInfoOsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/os";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/os</summary>
	public Task<ConnectionStatus> NodesInfoOsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/os";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/plugin</summary>
	public ConnectionStatus NodesInfoPluginGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/plugin";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/plugin</summary>
	public Task<ConnectionStatus> NodesInfoPluginGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/plugin";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/process</summary>
	public ConnectionStatus NodesInfoProcessGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/process";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/process</summary>
	public Task<ConnectionStatus> NodesInfoProcessGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/process";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/settings</summary>
	public ConnectionStatus NodesInfoSettingsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/settings";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/settings</summary>
	public Task<ConnectionStatus> NodesInfoSettingsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/settings";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/thread_pool</summary>
	public ConnectionStatus NodesInfoThread_poolGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/thread_pool";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/thread_pool</summary>
	public Task<ConnectionStatus> NodesInfoThread_poolGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/thread_pool";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/transport</summary>
	public ConnectionStatus NodesInfoTransportGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/transport";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/transport</summary>
	public Task<ConnectionStatus> NodesInfoTransportGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/transport";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/_restart</summary>
	public ConnectionStatus NodesRestartPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/nodes/_restart";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/_restart</summary>
	public Task<ConnectionStatus> NodesRestartPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_cluster/nodes/_restart";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/{nodeId}/_restart</summary>
	public ConnectionStatus NodesRestartPost(string nodeId, object body, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_cluster/nodes/{nodeId}/_restart".Inject(new { nodeId = nodeId });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/{nodeId}/_restart</summary>
	public Task<ConnectionStatus> NodesRestartPostAsync(string nodeId, object body, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_cluster/nodes/{nodeId}/_restart".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/{nodeId}/_shutdown</summary>
	public ConnectionStatus NodesShutdownPost(string nodeId, object body, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_cluster/nodes/{nodeId}/_shutdown".Inject(new { nodeId = nodeId });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_cluster/nodes/{nodeId}/_shutdown</summary>
	public Task<ConnectionStatus> NodesShutdownPostAsync(string nodeId, object body, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_cluster/nodes/{nodeId}/_shutdown".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_shutdown</summary>
	public ConnectionStatus NodesShutdownPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_shutdown";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_shutdown</summary>
	public Task<ConnectionStatus> NodesShutdownPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_shutdown";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_nodes/stats</summary>
	public ConnectionStatus NodesStatsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats</summary>
	public Task<ConnectionStatus> NodesStatsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats</summary>
	public ConnectionStatus NodesStatsGet(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats".Inject(new { nodeId = nodeId });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/{nodeId}/stats</summary>
	public Task<ConnectionStatus> NodesStatsGetAsync(string nodeId, NameValueCollection queryString = null)
	{
		nodeId.ThrowIfNullOrEmpty("nodeId");
		var path = "/_nodes/{nodeId}/stats".Inject(new { nodeId = nodeId });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/fs</summary>
	public ConnectionStatus NodesStatsFsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/fs";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/fs</summary>
	public Task<ConnectionStatus> NodesStatsFsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/fs";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/http</summary>
	public ConnectionStatus NodesStatsHttpGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/http";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/http</summary>
	public Task<ConnectionStatus> NodesStatsHttpGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/http";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices</summary>
	public ConnectionStatus NodesStatsIndicesGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/indices";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices</summary>
	public Task<ConnectionStatus> NodesStatsIndicesGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/indices";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices/{flags}</summary>
	public ConnectionStatus NodesStatsIndicesGet(string flags, NameValueCollection queryString = null)
	{
		flags.ThrowIfNullOrEmpty("flags");
		var path = "/_nodes/stats/indices/{flags}".Inject(new { flags = flags });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices/{flags}</summary>
	public Task<ConnectionStatus> NodesStatsIndicesGetAsync(string flags, NameValueCollection queryString = null)
	{
		flags.ThrowIfNullOrEmpty("flags");
		var path = "/_nodes/stats/indices/{flags}".Inject(new { flags = flags });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices/{flags}/{fields}</summary>
	public ConnectionStatus NodesStatsIndicesGet(string flags, string fields, NameValueCollection queryString = null)
	{
		flags.ThrowIfNullOrEmpty("flags");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_nodes/stats/indices/{flags}/{fields}".Inject(new { flags = flags, fields = fields });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/indices/{flags}/{fields}</summary>
	public Task<ConnectionStatus> NodesStatsIndicesGetAsync(string flags, string fields, NameValueCollection queryString = null)
	{
		flags.ThrowIfNullOrEmpty("flags");
 		fields.ThrowIfNullOrEmpty("fields");
		var path = "/_nodes/stats/indices/{flags}/{fields}".Inject(new { flags = flags, fields = fields });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/jvm</summary>
	public ConnectionStatus NodesStatsJvmGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/jvm";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/jvm</summary>
	public Task<ConnectionStatus> NodesStatsJvmGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/jvm";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/network</summary>
	public ConnectionStatus NodesStatsNetworkGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/network";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/network</summary>
	public Task<ConnectionStatus> NodesStatsNetworkGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/network";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/os</summary>
	public ConnectionStatus NodesStatsOsGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/os";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/os</summary>
	public Task<ConnectionStatus> NodesStatsOsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/os";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/process</summary>
	public ConnectionStatus NodesStatsProcessGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/process";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/process</summary>
	public Task<ConnectionStatus> NodesStatsProcessGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/process";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/thread_pool</summary>
	public ConnectionStatus NodesStatsThread_poolGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/thread_pool";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/thread_pool</summary>
	public Task<ConnectionStatus> NodesStatsThread_poolGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/thread_pool";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/transport</summary>
	public ConnectionStatus NodesStatsTransportGet(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/transport";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_nodes/stats/transport</summary>
	public Task<ConnectionStatus> NodesStatsTransportGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_nodes/stats/transport";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_open</summary>
	public ConnectionStatus OpenIndexPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_open";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_open</summary>
	public Task<ConnectionStatus> OpenIndexPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_open";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_open</summary>
	public ConnectionStatus OpenIndexPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_open".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_open</summary>
	public Task<ConnectionStatus> OpenIndexPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_open".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_optimize</summary>
	public ConnectionStatus OptimizeGet(NameValueCollection queryString = null)
	{
		var path = "/_optimize";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_optimize</summary>
	public Task<ConnectionStatus> OptimizeGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_optimize";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_optimize</summary>
	public ConnectionStatus OptimizeGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_optimize".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_optimize</summary>
	public Task<ConnectionStatus> OptimizeGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_optimize".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_optimize</summary>
	public ConnectionStatus OptimizePost(object body, NameValueCollection queryString = null)
	{
		var path = "/_optimize";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_optimize</summary>
	public Task<ConnectionStatus> OptimizePostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_optimize";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_optimize</summary>
	public ConnectionStatus OptimizePost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_optimize".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_optimize</summary>
	public Task<ConnectionStatus> OptimizePostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_optimize".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cluster/pending_tasks</summary>
	public ConnectionStatus PendingClusterTasksGet(NameValueCollection queryString = null)
	{
		var path = "/_cluster/pending_tasks";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cluster/pending_tasks</summary>
	public Task<ConnectionStatus> PendingClusterTasksGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cluster/pending_tasks";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_percolate</summary>
	public ConnectionStatus PercolateGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_percolate</summary>
	public Task<ConnectionStatus> PercolateGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_percolate</summary>
	public ConnectionStatus PercolateGet(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_percolate</summary>
	public Task<ConnectionStatus> PercolateGetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_percolate</summary>
	public ConnectionStatus PercolatePost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_percolate</summary>
	public Task<ConnectionStatus> PercolatePostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_percolate</summary>
	public ConnectionStatus PercolatePost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_percolate</summary>
	public Task<ConnectionStatus> PercolatePostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_percolate/count</summary>
	public ConnectionStatus PercolateCountGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate/count".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_percolate/count</summary>
	public Task<ConnectionStatus> PercolateCountGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate/count".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_percolate/count</summary>
	public ConnectionStatus PercolateCountGet(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate/count".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_percolate/count</summary>
	public Task<ConnectionStatus> PercolateCountGetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate/count".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_percolate/count</summary>
	public ConnectionStatus PercolateCountPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate/count".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_percolate/count</summary>
	public Task<ConnectionStatus> PercolateCountPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_percolate/count".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_percolate/count</summary>
	public ConnectionStatus PercolateCountPost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate/count".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_percolate/count</summary>
	public Task<ConnectionStatus> PercolateCountPostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_percolate/count".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_template/{name}</summary>
	public ConnectionStatus PutIndexTemplatePost(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_template/{name}</summary>
	public Task<ConnectionStatus> PutIndexTemplatePostAsync(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_template/{name}</summary>
	public ConnectionStatus PutIndexTemplate(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_template/{name}</summary>
	public Task<ConnectionStatus> PutIndexTemplateAsync(string name, object body, NameValueCollection queryString = null)
	{
		name.ThrowIfNullOrEmpty("name");
		var path = "/_template/{name}".Inject(new { name = name });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mapping</summary>
	public ConnectionStatus PutMappingPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_mapping</summary>
	public Task<ConnectionStatus> PutMappingPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mapping</summary>
	public ConnectionStatus PutMappingPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_mapping</summary>
	public Task<ConnectionStatus> PutMappingPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_mapping</summary>
	public ConnectionStatus PutMapping(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_mapping</summary>
	public Task<ConnectionStatus> PutMappingAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_mapping".Inject(new { index = index });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_mapping</summary>
	public ConnectionStatus PutMapping(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_mapping</summary>
	public Task<ConnectionStatus> PutMappingAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_mapping".Inject(new { index = index, type = type });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_warmer/{name}</summary>
	public ConnectionStatus PutWarmer(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_warmer/{name}</summary>
	public Task<ConnectionStatus> PutWarmerAsync(string index, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/_warmer/{name}".Inject(new { index = index, name = name });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_warmer/{name}</summary>
	public ConnectionStatus PutWarmer(string index, string type, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/{type}/_warmer/{name}</summary>
	public Task<ConnectionStatus> PutWarmerAsync(string index, string type, string name, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		name.ThrowIfNullOrEmpty("name");
		var path = "/{index}/{type}/_warmer/{name}".Inject(new { index = index, type = type, name = name });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>GET /_refresh</summary>
	public ConnectionStatus RefreshGet(NameValueCollection queryString = null)
	{
		var path = "/_refresh";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_refresh</summary>
	public Task<ConnectionStatus> RefreshGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_refresh";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_refresh</summary>
	public ConnectionStatus RefreshGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_refresh".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_refresh</summary>
	public Task<ConnectionStatus> RefreshGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_refresh".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_refresh</summary>
	public ConnectionStatus RefreshPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_refresh";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_refresh</summary>
	public Task<ConnectionStatus> RefreshPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_refresh";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_refresh</summary>
	public ConnectionStatus RefreshPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_refresh".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_refresh</summary>
	public Task<ConnectionStatus> RefreshPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_refresh".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_search</summary>
	public ConnectionStatus SearchGet(NameValueCollection queryString = null)
	{
		var path = "/_search";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_search</summary>
	public Task<ConnectionStatus> SearchGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_search";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_search</summary>
	public ConnectionStatus SearchGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_search</summary>
	public Task<ConnectionStatus> SearchGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_search</summary>
	public ConnectionStatus SearchGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_search</summary>
	public Task<ConnectionStatus> SearchGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_search</summary>
	public ConnectionStatus SearchPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_search";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_search</summary>
	public Task<ConnectionStatus> SearchPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_search";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_search</summary>
	public ConnectionStatus SearchPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_search</summary>
	public Task<ConnectionStatus> SearchPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_search".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_search</summary>
	public ConnectionStatus SearchPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_search</summary>
	public Task<ConnectionStatus> SearchPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_search".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_search/scroll</summary>
	public ConnectionStatus SearchScrollGet(NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_search/scroll</summary>
	public Task<ConnectionStatus> SearchScrollGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_search/scroll/{scroll_id}</summary>
	public ConnectionStatus SearchScrollGet(string scroll_id, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_search/scroll/{scroll_id}</summary>
	public Task<ConnectionStatus> SearchScrollGetAsync(string scroll_id, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_search/scroll</summary>
	public ConnectionStatus SearchScrollPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_search/scroll</summary>
	public Task<ConnectionStatus> SearchScrollPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_search/scroll";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_search/scroll/{scroll_id}</summary>
	public ConnectionStatus SearchScrollPost(string scroll_id, object body, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_search/scroll/{scroll_id}</summary>
	public Task<ConnectionStatus> SearchScrollPostAsync(string scroll_id, object body, NameValueCollection queryString = null)
	{
		scroll_id.ThrowIfNullOrEmpty("scroll_id");
		var path = "/_search/scroll/{scroll_id}".Inject(new { scroll_id = scroll_id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /_cat/shards</summary>
	public ConnectionStatus ShardsGet(NameValueCollection queryString = null)
	{
		var path = "/_cat/shards";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_cat/shards</summary>
	public Task<ConnectionStatus> ShardsGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_cat/shards";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /_suggest</summary>
	public ConnectionStatus SuggestGet(NameValueCollection queryString = null)
	{
		var path = "/_suggest";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_suggest</summary>
	public Task<ConnectionStatus> SuggestGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_suggest";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_suggest</summary>
	public ConnectionStatus SuggestGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_suggest".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_suggest</summary>
	public Task<ConnectionStatus> SuggestGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_suggest".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_suggest</summary>
	public ConnectionStatus SuggestPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_suggest";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_suggest</summary>
	public Task<ConnectionStatus> SuggestPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_suggest";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_suggest</summary>
	public ConnectionStatus SuggestPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_suggest".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_suggest</summary>
	public Task<ConnectionStatus> SuggestPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_suggest".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_termvector</summary>
	public ConnectionStatus TermVectorGet(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_termvector".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/{id}/_termvector</summary>
	public Task<ConnectionStatus> TermVectorGetAsync(string index, string type, string id, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_termvector".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_termvector</summary>
	public ConnectionStatus TermVectorPost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_termvector".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_termvector</summary>
	public Task<ConnectionStatus> TermVectorPostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_termvector".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}</summary>
	public ConnectionStatus TypesExistsHead(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}".Inject(new { index = index, type = type });
		return this.DoRequest("HEAD", path, queryString: queryString);
	}

	///<summary>HEAD /{index}/{type}</summary>
	public Task<ConnectionStatus> TypesExistsHeadAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}".Inject(new { index = index, type = type });
		return this.DoRequestAsync("HEAD", path, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_update</summary>
	public ConnectionStatus UpdatePost(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_update".Inject(new { index = index, type = type, id = id });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/{id}/_update</summary>
	public Task<ConnectionStatus> UpdatePostAsync(string index, string type, string id, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
 		id.ThrowIfNullOrEmpty("id");
		var path = "/{index}/{type}/{id}/_update".Inject(new { index = index, type = type, id = id });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_settings</summary>
	public ConnectionStatus UpdateSettingsPut(object body, NameValueCollection queryString = null)
	{
		var path = "/_settings";
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /_settings</summary>
	public Task<ConnectionStatus> UpdateSettingsPutAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_settings";
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_settings</summary>
	public ConnectionStatus UpdateSettingsPut(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_settings".Inject(new { index = index });
		return this.DoRequest("PUT", path, data: body, queryString: queryString);
	}

	///<summary>PUT /{index}/_settings</summary>
	public Task<ConnectionStatus> UpdateSettingsPutAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_settings".Inject(new { index = index });
		return this.DoRequestAsync("PUT", path, data: body, queryString: queryString);
	}

	///<summary>GET /_validate/query</summary>
	public ConnectionStatus ValidateQueryGet(NameValueCollection queryString = null)
	{
		var path = "/_validate/query";
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryGetAsync(NameValueCollection queryString = null)
	{
		var path = "/_validate/query";
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_validate/query</summary>
	public ConnectionStatus ValidateQueryGet(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_validate/query".Inject(new { index = index });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryGetAsync(string index, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_validate/query".Inject(new { index = index });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_validate/query</summary>
	public ConnectionStatus ValidateQueryGet(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_validate/query".Inject(new { index = index, type = type });
		return this.DoRequest("GET", path, queryString: queryString);
	}

	///<summary>GET /{index}/{type}/_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryGetAsync(string index, string type, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_validate/query".Inject(new { index = index, type = type });
		return this.DoRequestAsync("GET", path, queryString: queryString);
	}

	///<summary>POST /_validate/query</summary>
	public ConnectionStatus ValidateQueryPost(object body, NameValueCollection queryString = null)
	{
		var path = "/_validate/query";
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryPostAsync(object body, NameValueCollection queryString = null)
	{
		var path = "/_validate/query";
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_validate/query</summary>
	public ConnectionStatus ValidateQueryPost(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_validate/query".Inject(new { index = index });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryPostAsync(string index, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
		var path = "/{index}/_validate/query".Inject(new { index = index });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_validate/query</summary>
	public ConnectionStatus ValidateQueryPost(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_validate/query".Inject(new { index = index, type = type });
		return this.DoRequest("POST", path, data: body, queryString: queryString);
	}

	///<summary>POST /{index}/{type}/_validate/query</summary>
	public Task<ConnectionStatus> ValidateQueryPostAsync(string index, string type, object body, NameValueCollection queryString = null)
	{
		index.ThrowIfNullOrEmpty("index");
 		type.ThrowIfNullOrEmpty("type");
		var path = "/{index}/{type}/_validate/query".Inject(new { index = index, type = type });
		return this.DoRequestAsync("POST", path, data: body, queryString: queryString);
	}
	}
}
